{"version":3,"sources":["features/userSlice.js","firebase.js","components/InputOption/InputOption.js","components/Post/Post.js","components/Feed/Feed.js","components/HeaderOption/HeaderOption.js","components/Header/Header.js","components/Widgets/Widgets.js","components/Sidebar/Sidebar.js","screens/HomeScreen/HomeScreen.js","components/Login/Login.js","screens/LoginScreen/LoginScreen.js","screens/LoadingScreen/LoadingScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/PageNotFound/PageNotFound.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","InputOption","Icon","title","color","className","style","Post","forwardRef","ref","description","message","photoUrl","Avatar","src","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useSelector","useState","posts","setPosts","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","type","value","onChange","e","target","onClick","preventDefault","add","displayName","email","photoURL","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOption","alt","avatar","Header","dispatch","useDispatch","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Widgets","newsArticle","heading","subtitle","Sidebar","F","L","search","split","recentItem","topic","HomeScreen","Login","setEmail","password","setPassword","signInWithEmailAndPassword","then","userAuth","uid","profileURL","catch","err","alert","to","LoginScreen","LoadingScreen","load","setLoad","setTimeout","height","width","RegisterScreen","setName","profilePic","setProfilePic","vlaue","createUserWithEmailAndPassword","updateProfile","error","PageNotFound","App","onAuthStateChanged","path","render","exact","component","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2652609.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: state => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from 'firebase'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBc5pXccdiGnBk3KBIE85h_E-k2oPhqtbw\",\r\n    authDomain: \"spotify-clone-e9554.firebaseapp.com\",\r\n    databaseURL: \"https://spotify-clone-e9554.firebaseio.com\",\r\n    projectId: \"spotify-clone-e9554\",\r\n    storageBucket: \"spotify-clone-e9554.appspot.com\",\r\n    messagingSenderId: \"1057907833015\",\r\n    appId: \"1:1057907833015:web:3b93325237db31c31b7532\",\r\n    measurementId: \"G-D9N1X62S0B\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export { db, auth };","import React from 'react'\r\nimport './InputOption.css'\r\n\r\nconst InputOption = ({Icon, title, color}) => {\r\n    return (\r\n        <div className='inputOption'>\r\n            <Icon style={{color: color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import React,{ forwardRef } from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'; //\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined'\r\nimport './Post.css'\r\nimport InputOption from '../InputOption/InputOption';\r\n\r\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\r\n    return (\r\n        <div ref={ref} className='post'>\r\n            <div className='post__header'>\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className='post__info'>\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='post__body'>\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className='post__buttons'>\r\n                <InputOption Icon={ThumbUpAltOutlinedIcon} title='Like' color='gray'/>\r\n                <InputOption Icon={ChatOutlinedIcon} title='Comment' color='gray'/>\r\n                <InputOption Icon={ShareOutlinedIcon} title='Share' color='gray'/>\r\n                <InputOption Icon={SendOutlinedIcon} title='Send' color='gray'/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React,{ useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions'\r\nimport EventNoteIcon from '@material-ui/icons/EventNote'\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay' \r\nimport InputOption from '../InputOption/InputOption'\r\nimport Post from '../Post/Post'\r\nimport { db } from '../../firebase'\r\nimport firebase from 'firebase'\r\nimport { selectUser } from '../../features/userSlice'\r\nimport { useSelector } from 'react-redux'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nconst Feed = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    useEffect(() =>{\r\n        db.collection('posts')\r\n          .orderBy('timestamp', 'desc')\r\n          .onSnapshot(snapshot => setPosts(\r\n            snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            }))\r\n        ))\r\n    },[])\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name:user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoURL||'',\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className='feed__inputContainer'>\r\n                <div className='feed__input'>\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input type='text' value={input} onChange={e => setInput(e.target.value)}/>\r\n                        <button type='submit' onClick={sendPost}>Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className='feed__inputOptions'>\r\n                    <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9'/>\r\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E'/>\r\n                    <InputOption Icon={EventNoteIcon} title='Event' color='#C0CBCD'/>\r\n                    <InputOption Icon={CalendarViewDayIcon} title='Write Article' color='#7FC15E'/>\r\n                </div>\r\n            </div>\r\n            <FlipMove>\r\n                {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\r\n                    <Post key={id} name={name} description={description} message={message} photoUrl={photoUrl}/>\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './HeaderOption.css'\r\n\r\nconst HeaderOption = ({ alt, avatar, Icon, title, onClick }) => {\r\n    return (\r\n        <div onClick={onClick} className='headerOption'>\r\n            {Icon && <Icon className='headerOption__icon'/>}\r\n            {alt && (<Avatar className='headerOption__icon' src={avatar}>{alt}</Avatar>)}\r\n            <h3 className='headerOption__title'>{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport HeaderOption from '../HeaderOption/HeaderOption'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from '../../features/userSlice'\r\nimport { auth } from '../../firebase'\r\n\r\nconst linkedInLogo = \"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header__left\">\r\n                <img src={linkedInLogo} alt=\"\"/>\r\n            </div>\r\n            <div className=\"header__search\">\r\n                <SearchIcon/><input placeholder=\"Search\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title='Home'/>\r\n                <HeaderOption Icon={SupervisorAccountIcon} title='My Network'/>\r\n                <HeaderOption Icon={BusinessCenterIcon} title='Jobs'/>\r\n                <HeaderOption Icon={ChatIcon} title='Messaging'/>\r\n                <HeaderOption Icon={NotificationsIcon} title='Notifications'/>\r\n                <HeaderOption avatar={user?.photoURL} alt={user?.email[0]} title='me' onClick={logoutOfApp}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Widgets.css'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\r\n\r\nconst Widgets = () => {\r\n\r\n    const newsArticle = (heading, subtitle) =>(\r\n        <div className='widgets__article'>\r\n            <div className='widgets__articleLeft'>\r\n                <FiberManualRecordIcon/>\r\n            </div>\r\n\r\n            <div className='widgets__articleRight'>\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='widgets'>\r\n            <div className='widgets__header'>\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon/>\r\n            </div>\r\n\r\n            {newsArticle('Dummy LinkedIn Clone','Made By Mayank')}\r\n            {newsArticle('Crash 2021',\"Stock Market Bubble Rissing\")}\r\n            {newsArticle('Bye Bye 2020','Happy new year 2021')}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../../features/userSlice'\r\nimport './Sidebar.css'\r\n\r\nconst bgImage = 'https://source.unsplash.com/random/200'\r\n\r\nconst Sidebar = () => {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    let F='',L='';\r\n\r\n    if(user?.displayName?.search(' ')===-1){\r\n            F=user?.displayName[0]\r\n    }else{\r\n        F = user?.displayName?.split(' ')[0][0]\r\n        L = user?.displayName?.split(' ')[1][0]\r\n    }\r\n\r\n    const recentItem = (topic) => (\r\n        <div className='sidebar__recentItem'>\r\n            <span className='sidebar__hash'>#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar__top'>\r\n                <img src={bgImage} className=''alt=''/>\r\n                <Avatar src={user?.photoURL} className='sidebar__avatar'>{F}{L}</Avatar>\r\n                <h2>{user?.displayName}</h2>\r\n                <h4>{user?.email}</h4>\r\n            </div>\r\n\r\n            <div className='sidebar__stats'>\r\n                <div className='sidebar__stat'>\r\n                    <p>Who viewed you</p>\r\n                    <p className='sidebar__statNumber'>2,543</p>\r\n                </div>\r\n                <div className='sidebar__stat'>\r\n                    <p>Views on post</p>\r\n                    <p className='sidebar__statNumber'>2,448</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='sidebar__bottom'>\r\n                <p>Recent</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('java')}\r\n                {recentItem('javaScript')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './HomeScreen.css'\r\nimport Feed from '../../components/Feed/Feed'\r\nimport Header from '../../components/Header/Header'\r\nimport Widgets from '../../components/Widgets/Widgets'\r\nimport Sidebar from '../../components/Sidebar/Sidebar'\r\n\r\nconst HomeScreen = () => {\r\n    return (\r\n        <div className=\"homeScreen\">\r\n            <Header/>\r\n            <div className=\"homeScreen__body\">\r\n                <Sidebar/>\r\n                <Feed/>\r\n                <Widgets/>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React,{ useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { login } from '../../features/userSlice'\r\nimport { auth } from '../../firebase'\r\nimport './Login.css'\r\n\r\nconst linkedIn = 'https://logos-world.net/wp-content/uploads/2020/04/Linkedin-Logo-2011%E2%80%932019.png'\r\n\r\nconst Login = () => {\r\n\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault()\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(userAuth => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    photoURL: userAuth.user.profileURL,\r\n                }))\r\n            }).catch((err) => alert(err))\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <img src={linkedIn} alt=''/>\r\n            <form>\r\n                <input value={email}  placeholder='Email' type='email' onChange={e=> setEmail(e.target.value)}/>\r\n                <input value={password} placeholder='Password' type='password' onChange={e=> setPassword(e.target.value)}/>\r\n                <button type='submit' onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>\r\n                Not a member?\r\n                <Link to='/register'>\r\n                    <span className='login__register'> Register Now </span>\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Login from '../../components/Login/Login'\r\n\r\nconst LoginScreen = () => {\r\n    return (\r\n            <Login/>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ReactLoading from 'react-loading';\r\nimport './LoadingScreen.css'\r\n\r\nconst LoadingScreen = () => {\r\n\r\n    const [load,setLoad] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=>setLoad(false),1000)\r\n    },[])\r\n\r\n    return (\r\n        <div className='loader'>\r\n            {load?\r\n                <ReactLoading type='balls' color='lightblue' height={667} width={375}/>:\r\n                <Redirect to='/register'/>}   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen","import React, { useState } from 'react'\r\nimport './RegisterScreen.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../features/userSlice'\r\nimport { auth } from '../../firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst linkedIn = 'https://logos-world.net/wp-content/uploads/2020/04/Linkedin-Logo-2011%E2%80%932019.png'\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [profilePic,setProfilePic] = useState('')\r\n\r\n    \r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(!name){\r\n            return alert('Please enter a full name')\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: profilePic,\r\n                }).then(()=>\r\n                    dispatch(login({\r\n                        email: userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName: name,\r\n                        photoURL: profilePic,\r\n                    }))\r\n                )\r\n            }).catch(error => alert(error));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='register'>\r\n            <div className='register__header'>\r\n                <img src={linkedIn} alt=''/>\r\n                <Link to='/login'>\r\n                    <button>Sign In</button>\r\n                </Link>\r\n            </div>\r\n            <div className='register__body'>\r\n                <form>\r\n                    <h1>Welcome to your<br/>professional community</h1>\r\n                    <input vlaue={name} placeholder='Full Name' type='text' onChange={e=> setName(e.target.value)}/>\r\n                    <input value={profilePic} placeholder='Display Picture URL' type='text' onChange={e=> setProfilePic(e.target.value)}/>\r\n                    <input value={email}  placeholder='Email' type='email' onChange={e=> setEmail(e.target.value)}/>\r\n                    <input value={password} placeholder='Password' type='password' onChange={e=> setPassword(e.target.value)}/>\r\n                    <button type='submit' onClick={register}>Register</button>\r\n                </form>\r\n                <img src='register-front.svg' alt=''/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React,{ useEffect } from 'react';\r\nimport './App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\r\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\r\nimport LoadingScreen from './screens/LoadingScreen/LoadingScreen';\r\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\r\nimport PageNotFound from './screens/PageNotFound/PageNotFound';\r\n\r\nfunction App() {\r\n\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(userAuth =>{\r\n      if(userAuth){\r\n        dispatch(login({\r\n          email: userAuth.email,\r\n          uid: userAuth.uid,\r\n          displayName: userAuth.displayName,\r\n          photoURL: userAuth.photoURL,\r\n        }))\r\n      }else{\r\n          dispatch(logout())\r\n      }\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n          <Route path=\"/register\" render={() => (\r\n            user? (\r\n              <Redirect to=\"/home\"/>\r\n            ) : (\r\n              <RegisterScreen/>\r\n            )\r\n          )}/>\r\n          <Route path=\"/login\" render={() => (\r\n            user? (\r\n              <Redirect to=\"/home\"/>\r\n            ) : (\r\n              <LoginScreen/>\r\n            )\r\n          )}/>\r\n          <Route path=\"/home\" render={() => (\r\n            user? (\r\n              <HomeScreen/>\r\n            ) : (\r\n              <Redirect to=\"/login\"/>\r\n            )\r\n          )}/>\r\n          <Route path=\"/\" exact render={() => (\r\n            user? (\r\n              <Redirect to=\"/home\"/>\r\n            ) : (\r\n              <LoadingScreen />\r\n            )\r\n          )}/>\r\n          <Route path='*' component={PageNotFound} />\r\n      </Switch> \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}